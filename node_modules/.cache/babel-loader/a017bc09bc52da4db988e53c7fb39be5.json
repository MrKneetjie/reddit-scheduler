{"ast":null,"code":"var _jsxFileName = \"/Users/davidknetemann/Downloads/onlybands 3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [showBulkPostForm, setShowBulkPostForm] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(true);\n\n  async function getUsers() {\n    await fetch('http://localhost:3030/getUsers').then(response => response.json()).then(users => setUsers(users));\n  }\n\n  async function getPosts() {\n    await fetch('http://localhost:3030/getPosts').then(response => response.json()).then(posts => setPosts(posts));\n  }\n\n  useEffect(() => {\n    getUsers();\n    getPosts();\n  }, []);\n\n  const addAccount = async () => {\n    fetch('http://localhost:3030/authUrl').then(response => response.json()).then(data => window.location.href = data.url);\n  };\n\n  const handleModal = () => {\n    setShowPostForm(!showPostForm);\n  };\n\n  const handleBulkPostModal = () => {\n    setShowBulkPostForm(!showBulkPostForm);\n  };\n\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    const login = {\n      name: event.target.name.value,\n      password: event.target.password.value\n    };\n\n    if (login.name === \"David\" && login.password === \"Onlybands\") {\n      setShowLoginForm(false);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const submission = {\n      date: event.target.date.value ? event.target.date.value : 'now',\n      sub: event.target.sub.value,\n      title: event.target.title.value,\n      text: event.target.text.value\n    };\n    fromAuth(submission, event.target.account.value);\n  };\n\n  const fromAuth = (submission, account) => {\n    fetch('http://localhost:3030/fromAuth', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify({\n        submission: submission,\n        account: account\n      })\n    }).then(response => response.json()).then(data => {\n      setShowPostForm(false);\n      setShowBulkPostForm(false);\n    });\n  };\n\n  const handleBulkSubmit = async event => {\n    event.preventDefault();\n    var fileUpload = document.getElementById(\"csv\");\n    var regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.csv|.txt)$/;\n\n    if (regex.test(fileUpload.value.toLowerCase())) {\n      if (typeof FileReader != \"undefined\") {\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var table = document.createElement(\"table\");\n          var rows = e.target.result.split(\"\\n\");\n\n          for (var i = 0; i < rows.length; i++) {\n            var cells = rows[i].split(\",\");\n\n            if (cells.length > 1) {\n              let data = [];\n              var row = table.insertRow(-1);\n\n              for (var j = 0; j < cells.length; j++) {\n                data.push(cells[j]);\n                var cell = row.insertCell(-1);\n                cell.innerHTML = cells[j];\n              }\n\n              const submission = {\n                title: data[0],\n                text: data[1],\n                sub: data[2],\n                date: data[3]\n              };\n              fromAuth(submission, data[4]);\n            }\n          }\n        };\n\n        reader.readAsText(fileUpload.files[0]);\n      } else {\n        alert(\"This browser does not support HTML5.\");\n      }\n    } else {\n      alert(\"Please upload a valid CSV file.\");\n    } // const csv = event.target.file.value;\n    // console.log(csv);\n    // const csvRows = await csvtojson({\n    //   // noheader: true,\n    //   output: 'json',\n    // })\n    // .fromString(csv.toString());\n    // console.log(csvRows);\n    // fetch('http://localhost:3030/import', {\n    //   method: 'POST',\n    //   mode: 'cors',\n    //   cache: 'no-cache',\n    //   credentials: 'same-origin',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   redirect: 'follow',\n    //   referrerPolicy: 'no-referrer',\n    //   body: JSON.stringify({\n    //       csv: csv,\n    //     })\n    // })\n    // .then(response => response.json())\n    // .then(data => {\n    //   console.log(data);\n    //   setShowBulkPostForm(false);\n    // });\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"./\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Onlybands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAccount,\n        children: \"Add Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleModal.bind(),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBulkPostModal.bind(),\n        children: \"Bulk Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDD17 Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCC5 Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCC1 Sub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDCD5 Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDDD2\\uFE0F Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83D\\uDC40 Posted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), posts && posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://www.reddit.com/r/${post.sub}/comments/${post.link}/${post.title}`,\n                children: post.link\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Intl.DateTimeFormat(\"en-GB\", {\n                month: \"2-digit\",\n                day: \"2-digit\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                hour12: true\n              }).format(new Date(post.date))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.sub\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.posted ? \"✅\" : \"❌\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postFormHeading\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Create Post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          name: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Subreddit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"sub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"account\",\n          id: \"account\",\n          children: users && users.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: user.username\n            }, user.refreshToken, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 24\n    }, this), showBulkPostForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleBulkSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postFormHeading\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Upload CSV!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          id: \"csv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 28\n    }, this), showLoginForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postFormHeading\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6xQCDZtbrFS1wY1SqhkD18PgaiA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davidknetemann/Downloads/onlybands 3/src/App.js"],"names":["useEffect","useState","App","users","setUsers","posts","setPosts","showPostForm","setShowPostForm","showBulkPostForm","setShowBulkPostForm","showLoginForm","setShowLoginForm","getUsers","fetch","then","response","json","getPosts","addAccount","data","window","location","href","url","handleModal","handleBulkPostModal","handleLoginSubmit","event","preventDefault","login","name","target","value","password","handleSubmit","submission","date","sub","title","text","fromAuth","account","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","handleBulkSubmit","fileUpload","document","getElementById","regex","test","toLowerCase","FileReader","reader","onload","e","table","createElement","rows","result","split","i","length","cells","row","insertRow","j","push","cell","insertCell","innerHTML","readAsText","files","alert","bind","map","post","link","Intl","DateTimeFormat","month","day","hour","minute","hour12","format","Date","posted","_id","user","username","refreshToken"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [showBulkPostForm, setShowBulkPostForm] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(true);\n\n  async function getUsers() {\n    await fetch('http://localhost:3030/getUsers')\n    .then(response => response.json())\n    .then(users => setUsers(users));\n  }\n\n  async function getPosts() {\n    await fetch('http://localhost:3030/getPosts')\n    .then(response => response.json())\n    .then(posts => setPosts(posts));\n  }\n\n  useEffect(() => {\n    getUsers();\n    getPosts();\n  }, [])\n  \n  const addAccount = async () => {\n    fetch('http://localhost:3030/authUrl')\n      .then(response => response.json())\n      .then(data => window.location.href = data.url);\n  }\n\n  const handleModal = () => {\n    setShowPostForm(!showPostForm);\n  }\n\n  const handleBulkPostModal = () => {\n    setShowBulkPostForm(!showBulkPostForm);\n  }\n\n  const handleLoginSubmit = (event) => {\n    event.preventDefault();\n\n    const login = {\n      name: event.target.name.value,\n      password: event.target.password.value,\n    }\n\n    if (login.name === \"David\" && login.password === \"Onlybands\") {\n      setShowLoginForm(false);\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const submission = {\n      date: event.target.date.value ? event.target.date.value : 'now',\n      sub: event.target.sub.value,\n      title: event.target.title.value,\n      text: event.target.text.value,\n    }\n\n    fromAuth(submission, event.target.account.value);\n  }\n\n  const fromAuth = (submission, account) => {\n    fetch('http://localhost:3030/fromAuth', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify({\n          submission: submission,\n          account: account,\n        })\n    })\n    .then(response => response.json())\n    .then(data => {\n      setShowPostForm(false);\n      setShowBulkPostForm(false);\n    });\n  }\n\n  const handleBulkSubmit = async (event) => {\n    event.preventDefault();\n\n    var fileUpload = document.getElementById(\"csv\");\n    var regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.csv|.txt)$/;\n    if (regex.test(fileUpload.value.toLowerCase())) {\n        if (typeof (FileReader) != \"undefined\") {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                var table = document.createElement(\"table\");\n                var rows = e.target.result.split(\"\\n\");\n                for (var i = 0; i < rows.length; i++) {\n                    var cells = rows[i].split(\",\");\n                    if (cells.length > 1) {\n                        let data = [];\n                        var row = table.insertRow(-1);\n                        for (var j = 0; j < cells.length; j++) {\n                            data.push(cells[j]);\n                            var cell = row.insertCell(-1);\n                            cell.innerHTML = cells[j];\n                        }\n\n                        const submission = {\n                          title: data[0],\n                          text: data[1],\n                          sub: data[2],\n                          date: data[3]\n                        }\n\n                        fromAuth(submission, data[4])\n                    }\n                }\n            }\n            reader.readAsText(fileUpload.files[0]);\n        } else {\n            alert(\"This browser does not support HTML5.\");\n        }\n    } else {\n        alert(\"Please upload a valid CSV file.\");\n    }\n\n    // const csv = event.target.file.value;\n    // console.log(csv);\n\n    // const csvRows = await csvtojson({\n    //   // noheader: true,\n    //   output: 'json',\n    // })\n    // .fromString(csv.toString());\n\n    // console.log(csvRows);\n\n    // fetch('http://localhost:3030/import', {\n    //   method: 'POST',\n    //   mode: 'cors',\n    //   cache: 'no-cache',\n    //   credentials: 'same-origin',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   redirect: 'follow',\n    //   referrerPolicy: 'no-referrer',\n    //   body: JSON.stringify({\n    //       csv: csv,\n    //     })\n    // })\n    // .then(response => response.json())\n    // .then(data => {\n    //   console.log(data);\n    //   setShowBulkPostForm(false);\n    // });\n  }\n  \n  return (\n    <div className=\"App\">\n      <a href=\"./\"><h1>Onlybands</h1></a>\n      <div className=\"buttons\">\n        <button onClick={addAccount}>Add Account</button>\n        <button onClick={handleModal.bind()}>Post</button>\n        <button onClick={handleBulkPostModal.bind()}>Bulk Post</button>\n      </div>\n\n      <table>\n        <tbody>\n          <tr>\n            <th>🔗 Link</th>\n            <th>📅 Date</th>\n            <th>📁 Sub</th>\n            <th>📕 Title</th>\n            <th>🗒️ Text</th>\n            <th>👀 Posted</th>\n          </tr>\n          {posts && posts.map(post => {\n            return <tr key={post._id}>\n              <td><a href={`https://www.reddit.com/r/${post.sub}/comments/${post.link}/${post.title}`}>{post.link}</a></td>\n              <td>{new Intl.DateTimeFormat(\"en-GB\", {\n                  month: \"2-digit\",\n                  day: \"2-digit\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  hour12: true,\n                }).format(new Date(post.date))}</td>\n              <td>{post.sub}</td>\n              <td>{post.title}</td>\n              <td>{post.text}</td>\n              <td>{post.posted ? \"✅\" : \"❌\"}</td>\n            </tr>;\n          })}\n        </tbody>\n      </table>\n\n      {showPostForm && <form onSubmit={handleSubmit}>\n        <div className=\"postFormHeading\">\n          <h4>Create Post!</h4>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Title</label>\n          <input type=\"text\" name=\"title\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Description</label>\n          <input type=\"textarea\" name=\"text\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Subreddit</label>\n          <input type=\"text\" name=\"sub\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Date</label>\n          <input type=\"datetime-local\" name=\"date\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Account</label>\n          <select name=\"account\" id=\"account\">\n            {users && users.map(user => {\n              return <option value={user.username} key={user.refreshToken}>{user.username}</option>;\n            })}\n          </select>\n        </div>\n\n        <button>POST</button>\n      </form>}\n\n      {showBulkPostForm && <form onSubmit={handleBulkSubmit}>\n        <div className=\"postFormHeading\">\n          <h4>Upload CSV!</h4>\n        </div>\n\n        <div className=\"input-group\">\n          <label>CSV</label>\n          <input type=\"file\" name=\"file\" id=\"csv\"></input>\n        </div>\n\n        <button>POST</button>\n      </form>}\n\n      {showLoginForm && <form onSubmit={handleLoginSubmit}>\n        <div className=\"postFormHeading\">\n          <h4>Login!</h4>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Username</label>\n          <input type=\"text\" name=\"name\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Password</label>\n          <input type=\"password\" name=\"password\"></input>\n        </div>\n\n\n        <button>LOGIN</button>\n      </form>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}