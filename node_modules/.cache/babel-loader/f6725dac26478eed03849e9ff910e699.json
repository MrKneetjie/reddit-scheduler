{"ast":null,"code":"var _jsxFileName = \"/Users/davidknetemann/Downloads/onlybands 3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n\n  async function getUsers() {\n    await fetch('http://localhost:3030/getUsers').then(response => response.json()).then(users => setUsers(users));\n  }\n\n  async function getPosts() {\n    await fetch('http://localhost:3030/getPosts').then(response => response.json()).then(posts => setPosts(posts));\n  }\n\n  useEffect(() => {\n    getUsers();\n    getPosts();\n  }, []);\n\n  const addAccount = async () => {\n    fetch('http://localhost:3030/authUrl').then(response => response.json()).then(data => window.location.href = data.url);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const submission = {\n      date: event.target.date.value ? event.target.date.value : 'now',\n      sub: event.target.sub.value,\n      title: event.target.title.value,\n      text: event.target.text.value\n    };\n    fetch('http://localhost:3030/fromAuth', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify({\n        submission: submission,\n        account: event.target.account.value\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setShowPostForm(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"./\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Onlybands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addAccount,\n      children: \"Add Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.setShowPostForm.bind(this),\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Sub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Posted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), posts && posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://www.reddit.com/r/${post.sub}/comments/${post.link}`,\n              children: post.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Intl.DateTimeFormat(\"en-GB\", {\n              month: \"2-digit\",\n              day: \"2-digit\",\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              hour12: true\n            }).format(new Date(post.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.sub\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.posted ? \"✅\" : \"❌\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"postForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create Post!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          name: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Subreddit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"sub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"account\",\n          id: \"account\",\n          children: users && users.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: user.username\n            }, user.refreshToken, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"V4qUeZL0Rujso1vAe8nVbh+13Yk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davidknetemann/Downloads/onlybands 3/src/App.js"],"names":["useEffect","useState","App","users","setUsers","posts","setPosts","showPostForm","setShowPostForm","getUsers","fetch","then","response","json","getPosts","addAccount","data","window","location","href","url","handleSubmit","event","preventDefault","submission","date","target","value","sub","title","text","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","account","console","log","bind","map","post","link","Intl","DateTimeFormat","month","day","hour","minute","hour12","format","Date","posted","user","username","refreshToken"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n\n  async function getUsers() {\n    await fetch('http://localhost:3030/getUsers')\n    .then(response => response.json())\n    .then(users => setUsers(users));\n  }\n\n  async function getPosts() {\n    await fetch('http://localhost:3030/getPosts')\n    .then(response => response.json())\n    .then(posts => setPosts(posts));\n  }\n\n  useEffect(() => {\n    getUsers();\n    getPosts();\n  }, [])\n  \n  const addAccount = async () => {\n    fetch('http://localhost:3030/authUrl')\n      .then(response => response.json())\n      .then(data => window.location.href = data.url);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const submission = {\n      date: event.target.date.value ? event.target.date.value : 'now',\n      sub: event.target.sub.value,\n      title: event.target.title.value,\n      text: event.target.text.value,\n    }\n\n    fetch('http://localhost:3030/fromAuth', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify({\n          submission: submission,\n          account: event.target.account.value,\n        })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      setShowPostForm(false);\n    });\n  }\n  \n  return (\n    <div className=\"App\">\n      <a href=\"./\"><h1>Onlybands</h1></a>\n      <button onClick={addAccount}>Add Account</button>\n      <button onClick={this.setShowPostForm.bind(this)}>Post</button>\n\n      <table>\n        <tr>\n          <th>Link</th>\n          <th>Date</th>\n          <th>Sub</th>\n          <th>Title</th>\n          <th>Text</th>\n          <th>Posted</th>\n        </tr>\n        {posts && posts.map(post => {\n          return <tr>\n            <td><a href={`https://www.reddit.com/r/${post.sub}/comments/${post.link}`}>{post.link}</a></td>\n            <td>{new Intl.DateTimeFormat(\"en-GB\", {\n                month: \"2-digit\",\n                day: \"2-digit\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                hour12: true,\n              }).format(new Date(post.date))}</td>\n            <td>{post.sub}</td>\n            <td>{post.title}</td>\n            <td>{post.text}</td>\n            <td>{post.posted ? \"✅\" : \"❌\"}</td>\n          </tr>;\n        })}\n      </table>\n\n      {showPostForm && <form onSubmit={handleSubmit} id=\"postForm\">\n        <h4>Create Post!</h4>\n        <div className=\"input-group\">\n          <label>Title</label>\n          <input type=\"text\" name=\"title\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Description</label>\n          <input type=\"textarea\" name=\"text\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Subreddit</label>\n          <input type=\"text\" name=\"sub\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Date</label>\n          <input type=\"datetime-local\" name=\"date\"></input>\n        </div>\n\n        <div className=\"input-group\">\n          <label>Account</label>\n          <select name=\"account\" id=\"account\">\n            {users && users.map(user => {\n              return <option value={user.username} key={user.refreshToken}>{user.username}</option>;\n            })}\n          </select>\n        </div>\n\n        <button>POST</button>\n      </form>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}